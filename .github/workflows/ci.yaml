name: CI
on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:

env:
  GO_VERSION: 1.18
  TINYGO_VERSION: 0.23.0

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      # Set fetch-depth: 0 to fetch commit history and tags for use in version calculation
      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run tests
        shell: bash
        run: make test

  build:
    runs-on: ubuntu-20.04
    needs: test
    steps:
      # submodule needs .git folder, which is missing without installing a newer git command
      # https://github.com/actions/checkout/issues/335
      - name: "Install latest `git`"
        run: |
          sudo apt purge git -y
          sudo apt-get update && sudo apt-get install -y software-properties-common make
          sudo add-apt-repository ppa:git-core/ppa -y
          # apt update fails to fetch some repo due to cert failure. Skip them.
          sudo apt update || true; sudo apt install -y --no-install-recommends git

      - name: Check out code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Install TinyGo
        run: |
          wget https://github.com/tinygo-org/tinygo/releases/download/v${TINYGO_VERSION}/tinygo_${TINYGO_VERSION}_amd64.deb
          sudo dpkg -i tinygo_${TINYGO_VERSION}_amd64.deb
          export PATH=$PATH:/usr/local/bin

      - name: "Cache generated .wasm file"
        uses: actions/cache@v2
        with:
          path: |
            build/main.wasm
          key: ${{ runner.os }}-cache-build-${{ github.sha }}

      - name: Build WASM filter
        shell: bash
        run: make build

      - name: Install WASM
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Cargo
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: wasm-tools

      - name: Validate WASM output
        shell: bash
        run: wasm-tools validate build/main.wasm

  e2e-test:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Install func-e"
        shell: bash
        run: curl https://func-e.io/install.sh | bash -s -- -b /usr/local/bin

      - name: "Restore the wasm files cache"
        uses: actions/cache@v2
        with:
          path: |
            build/main.wasm
          key: ${{ runner.os }}-cache-build-${{ github.sha }}

      - name: "Verify build"
        shell: bash
        run: test -f build/main.wasm

      - name: "Spin up server and envoy"
        shell: bash
        run: |
          func-e run -c e2e/envoy-config.yaml --log-level info --component-log-level wasm:debug &

      - name: "Run tests"
        shell: bash
        run: |
          ./e2e/tests.sh

  package:
    runs-on: ubuntu-20.04
    needs: e2e-test
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Restore the wasm files cache"
        uses: actions/cache@v2
        with:
          path: |
            build/main.wasm
          key: ${{ runner.os }}-cache-build-${{ github.sha }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: jcchavezs/coraza-wasm-filter:latest
