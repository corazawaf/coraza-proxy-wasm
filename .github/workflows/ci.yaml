name: CI
on:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
  pull_request:
  workflow_dispatch:

env:
  GO_VERSION: '1.20'
  TINYGO_VERSION: 0.30.0
  # Run e2e tests against latest two releases and latest dev
  ENVOY_IMAGES: >
    envoyproxy/envoy:v1.29-latest
    envoyproxy/envoy:v1.28-latest
    envoyproxy/envoy-dev:latest
    istio/proxyv2:1.21.0
    istio/proxyv2:1.20.4

jobs:
  build:
    name: "Build project"
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:  # Ensure release_notes.sh can see prior commits
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install TinyGo
        run: |
          gh release download v${TINYGO_VERSION} -p '*.linux-amd64.tar.gz' -D ~ -R github.com/tinygo-org/tinygo
          tar -xf ~/tinygo${TINYGO_VERSION}.linux-amd64.tar.gz  -C $HOME
          echo "$HOME/tinygo/bin" >> $GITHUB_PATH
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache TinyGo build
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/tinygo
          key: ${{ runner.os }}-tinygo-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-tinygo-

      - name: Run code checks
        run: go run mage.go lint

      - name: Build WASM filter
        run: go run mage.go build

      - name: Run unit tests
        run: go run mage.go coverage

      - name: Run e2e tests
        shell: bash
        run: >
          for image in $ENVOY_IMAGES; do
              echo "Running e2e with Envoy image $image"
              ENVOY_IMAGE=$image go run mage.go e2e
          done

      - name: Run regression tests (ftw)
        run: go run mage.go ftw
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Push build binary to s3
        run: |
          aws s3 cp build/main.wasm s3://one-creation/main.wasm
